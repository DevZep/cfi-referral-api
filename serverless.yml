service: cfi-referral-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: ap-southeast-1

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: ${env:TABLE_NAME}
    tableNameCount: ${env:TABLE_NAME_COUNT}
    toEmails: 'darren.jensen@gmail.com darren.jensen@devbootstrap.com'
    fromEmail: 'darren.jensen@devzep.com'

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - ses:*
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource: '*'

functions:
  create:
    handler: endpoints/create.main
    events:
      - http:
          path: referrals
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: endpoints/get.main
    events:
      - http:
          path: referrals/{id}
          method: get
          cors: true
          authorizer: aws_iam

  count:
    handler: endpoints/count.main
    events:
      - http:
          path: count
          method: get
          cors: true
          authorizer: aws_iam

  sendEmail:
    handler: endpoints/sendEmail.main
    events:
      - http:
          path: send-email
          method: post
          cors: true

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}